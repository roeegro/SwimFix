
# <center> SwimFix<br> Maintenance Guide</center>

## Table of Contents
1. [Introduction](#Introduction)
2. [Client Side](#)
	* [Routes File](#)
	* [Video Trimmer](#)
	* [Test Generator](#)
	* [File Management](#)
4. [Server Side](#)
	* [Supported Functionality](#)
	* [File Management](#)
	* [Configurations](#)
5. [Adding Functionality](#)
6. [Assimilation on New Hardware](#)

## Introduction
Our system has 3 main parts. The first one is the training infrastructure.
For more details, [click here](https://github.com/roeegro/SwimFix/tree/master/training).

The other 2 parts are used for the SwimFix web application and they include a web client part and a server for analysis and evaluation. Both parts written in Python and connect each other with TCP conneciton.

<Join here project hierarchy chart>


## Client Side
The client side is a web interface which supports 2 types of users : usual and admin ones. Usual user interface supports upload of video to the server (for analysis), view data and feedback about technique of previous swimming videos and also participate in forum. Admin users can also add tests and run them in the system in order to examine system's performance. More details about the user interface can be found in this [link](https://github.com/roeegro/SwimFix/tree/master/client).
We used Flask, a python library, to write 
**![](https://lh3.googleusercontent.com/4rXSsvwTc9hLFd1cDh10kOJAbYD8C5u8kpMKvfwv8FwKyc7tHST1vAkngfZQKVJ80fauS_ijGFq1a8o5vFiXhwmUgjRJLWGGn0v4FTWR0pOMUN93w08Oxol031Lci7-cEo18N8n6)

### Routes File


### Video Trimmer

### Test Generator



<!--stackedit_data:
eyJoaXN0b3J5IjpbMTkyNjAzODksLTg2OTg4NDE2OSwtMjU5MT
E2MjU3LC00MjA0NzMyMzUsLTE0ODU1ODM5NzcsLTE3NDIzMTkx
NzEsLTIxMTY2NDQ5OTksLTExNTA1NTIwODgsLTMzMjQ1NTM2M1
19
-->